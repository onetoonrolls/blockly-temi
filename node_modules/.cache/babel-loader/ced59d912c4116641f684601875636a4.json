{"ast":null,"code":"/* eslint-disable */\n;\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./blockly'], factory);\n  } else if (typeof exports === 'object') {\n    // Node.js\n    module.exports = factory(require('./blockly'));\n  } else {\n    // Browser\n    root.Blockly = factory(root.Blockly);\n  }\n})(this, function (Blockly) {\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   * SPDX-License-Identifier: Apache-2.0\n   */\n\n  /**\n   * @fileoverview Blockly core module for the browser. It includes blockly.js\n   *               and adds a helper method for setting the locale.\n   */\n\n  /* eslint-disable */\n  'use strict'; // Add a helper method to set the Blockly locale.\n\n  Blockly.setLocale = function (locale) {\n    Blockly.Msg = Blockly.Msg || {};\n    Object.keys(locale).forEach(function (k) {\n      Blockly.Msg[k] = locale[k];\n    });\n  };\n\n  return Blockly;\n});","map":{"version":3,"sources":["C:/Users/oneto/OneDrive/Desktop/blockly/node_modules/blockly/core-browser.js"],"names":["root","factory","define","amd","exports","module","require","Blockly","setLocale","locale","Msg","Object","keys","forEach","k"],"mappings":"AAAA;AACA;;AAAE,WAASA,IAAT,EAAeC,OAAf,EAAwB;AACxB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAAE;AAChDD,IAAAA,MAAM,CAAC,CAAC,WAAD,CAAD,EAAgBD,OAAhB,CAAN;AACD,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AAAE;AACxCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,CAACK,OAAO,CAAC,WAAD,CAAR,CAAxB;AACD,GAFM,MAEA;AAAE;AACPN,IAAAA,IAAI,CAACO,OAAL,GAAeN,OAAO,CAACD,IAAI,CAACO,OAAN,CAAtB;AACD;AACF,CARC,EAQA,IARA,EAQM,UAASA,OAAT,EAAkB;AAC1B;;;;;;AAMA;;;;;AAKA;AACA,eAb0B,CAe1B;;AACAA,EAAAA,OAAO,CAACC,SAAR,GAAoB,UAAUC,MAAV,EAAkB;AACpCF,IAAAA,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACG,GAAR,IAAe,EAA7B;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAUC,CAAV,EAAa;AACvCP,MAAAA,OAAO,CAACG,GAAR,CAAYI,CAAZ,IAAiBL,MAAM,CAACK,CAAD,CAAvB;AACD,KAFD;AAGD,GALD;;AAOA,SAAOP,OAAP;AACC,CAhCC,CAAD","sourcesContent":["/* eslint-disable */\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) { // AMD\n    define(['./blockly'], factory);\n  } else if (typeof exports === 'object') { // Node.js\n    module.exports = factory(require('./blockly'));\n  } else { // Browser\n    root.Blockly = factory(root.Blockly);\n  }\n}(this, function(Blockly) {\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Blockly core module for the browser. It includes blockly.js\n *               and adds a helper method for setting the locale.\n */\n\n/* eslint-disable */\n'use strict';\n\n// Add a helper method to set the Blockly locale.\nBlockly.setLocale = function (locale) {\n  Blockly.Msg = Blockly.Msg || {};\n  Object.keys(locale).forEach(function (k) {\n    Blockly.Msg[k] = locale[k];\n  });\n};\n\nreturn Blockly;\n})); \n"]},"metadata":{},"sourceType":"script"}