{"ast":null,"code":"/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Define generation methods for custom blocks.\n * @author samelh@google.com (Sam El-Husseini)\n */\n// More on generating code:\n// https://developers.google.com/blockly/guides/create-custom-blocks/generating-code\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\nimport 'blockly/python';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n  return \"console.log('custom block');\\n\";\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n  return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n}; //temi customn block\n\n\nBlockly.Python['speech_say'] = function (block) {\n  var text_utterance = block.getFieldValue('utterance');\n  var dropdown_language_options = block.getFieldValue(\"language_options\"); // var code = `robot.speak(TtsRequest.create(\"${text_utterance}\", false));\\n`;\n\n  var code = `robot.speak(\"${text_utterance}\", ${dropdown_language_options}\")\\n`;\n  return code;\n};\n\nBlockly.Python['locations_goto'] = function (block) {\n  var text_location = block.getFieldValue('location'); // var code = `robot.goTo(\"${text_location}\");\\n`; \n\n  var code = `robot.goto(${text_location});\\n`; // @TODO Add wait\n\n  return code;\n}; // Blockly.JavaScript['call_person'] = function(block) {\n//   var text_contact = block.getFieldValue('contact');\n//   // var code = `robot.call(${text_contact});\\n`;\n//   return code\n// };\n\n\nBlockly.Python['call_person'] = function (block) {\n  var dropdown_contact = block.getFieldValue('contact'); //var code = `actionlist.append('{\"action\":\"CALL\", \"content\":\"${dropdown_contact}\"}')\\n`\n\n  var code = `robot.call(${dropdown_contact});\\n`;\n  return code;\n};\n\nBlockly.Python['locations_go_home'] = function (block) {\n  var code = `robot.returnhome();\\n`; //var code = `actionlist.append('{\"action\":\"GOTO\", \"content\":\"Home Base\"}')\\n`\n\n  return code;\n}; // UNDERDEVELOP----------------------------------------------------------\n\n\nBlockly.Python['openwebsite'] = function (block) {\n  var text_url = block.getFieldValue('url'); // TODO: Assemble Python into code variable.\n\n  var code = `robot.showweb(${text_url});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_turn'] = function (block) {\n  var number_angle = block.getFieldValue('angle'); // TODO: Assemble Python into code variable.\n\n  var code = `robot.turnBy(${number_angle});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_tilt'] = function (block) {\n  var number_Tilt_angle = block.getFieldValue('Tilt_angle'); // TODO: Assemble Python into code variable.\n\n  var code = `robot.tiltBy(${number_Tilt_angle});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_direction'] = function (block) {\n  var dropdown_direction = block.getFieldValue('direction');\n  var number_distance = block.getFieldValue('distance'); // TODO: Assemble Python into code variable.\n\n  var code = `robot.move(${dropdown_direction},${number_distance});\\n`;\n  return code;\n};\n\nBlockly.Python['event_block'] = function (block) {\n  var dropdown_event = block.getFieldValue('event');\n  var statements_event_out_of_bed = Blockly.JavaScript.statementToCode(block, 'event_out_of_bed'); // TODO: Assemble JavaScript into code variable.\n\n  var code = '...;\\n';\n  return code;\n};\n\nBlockly.Python['movement_turn2'] = function (block) {\n  var angle_movement = block.getFieldValue('movement'); // TODO: Assemble Python into code variable.\n\n  if (angle_movement >= -180 && angle_movement <= 180) var code = `robot.turnBy(${angle_movement});\\n`;else var code = `robot.turnBy(out of Range);\\n`; //var code = `robot.turnBy(${angle_movement});\\n`;\n\n  return code;\n};","map":{"version":3,"sources":["C:/Users/oneto/OneDrive/Desktop/blockly-react-temi-cmd/src/generator/generator.js"],"names":["Blockly","JavaScript","block","getField","getText","Python","text_utterance","getFieldValue","dropdown_language_options","code","text_location","dropdown_contact","text_url","number_angle","number_Tilt_angle","dropdown_direction","number_distance","dropdown_event","statements_event_out_of_bed","statementToCode","angle_movement"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAKA;AACA;AAEA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,OAAO,oBAAP;AACA,OAAO,gBAAP;;AAEAA,OAAO,CAACC,UAAR,CAAmB,kBAAnB,IAAyC,UAAUC,KAAV,EAAiB;AACxD,SAAO,gCAAP;AACD,CAFD;;AAIAF,OAAO,CAACC,UAAR,CAAmB,uBAAnB,IAA8C,UAAUC,KAAV,EAAiB;AAC7D,SAAO,iBAAiBA,KAAK,CAACC,QAAN,CAAe,MAAf,EAAuBC,OAAvB,EAAjB,GAAoD,MAA3D;AACD,CAFD,C,CAIA;;;AACAJ,OAAO,CAACK,MAAR,CAAe,YAAf,IAA+B,UAASH,KAAT,EAAgB;AAC7C,MAAII,cAAc,GAAGJ,KAAK,CAACK,aAAN,CAAoB,WAApB,CAArB;AACA,MAAIC,yBAAyB,GAAGN,KAAK,CAACK,aAAN,CAAoB,kBAApB,CAAhC,CAF6C,CAG7C;;AACA,MAAIE,IAAI,GAAI,gBAAeH,cAAe,MAAKE,yBAA0B,MAAzE;AACA,SAAOC,IAAP;AACD,CAND;;AAQAT,OAAO,CAACK,MAAR,CAAe,gBAAf,IAAmC,UAASH,KAAT,EAAgB;AACjD,MAAIQ,aAAa,GAAGR,KAAK,CAACK,aAAN,CAAoB,UAApB,CAApB,CADiD,CAEjD;;AACA,MAAIE,IAAI,GAAI,cAAaC,aAAc,MAAvC,CAHiD,CAIjD;;AACA,SAAOD,IAAP;AACD,CAND,C,CAQA;AACA;AACA;AAEA;AACA;;;AACAT,OAAO,CAACK,MAAR,CAAe,aAAf,IAAgC,UAASH,KAAT,EAAgB;AAC9C,MAAIS,gBAAgB,GAAGT,KAAK,CAACK,aAAN,CAAoB,SAApB,CAAvB,CAD8C,CAE9C;;AACA,MAAIE,IAAI,GAAI,cAAaE,gBAAiB,MAA1C;AACA,SAAOF,IAAP;AACD,CALD;;AAOAT,OAAO,CAACK,MAAR,CAAe,mBAAf,IAAsC,UAASH,KAAT,EAAgB;AACpD,MAAIO,IAAI,GAAI,uBAAZ,CADoD,CAEpD;;AACA,SAAOA,IAAP;AACD,CAJD,C,CAOA;;;AAEAT,OAAO,CAACK,MAAR,CAAe,aAAf,IAAgC,UAASH,KAAT,EAAgB;AAC9C,MAAIU,QAAQ,GAAGV,KAAK,CAACK,aAAN,CAAoB,KAApB,CAAf,CAD8C,CAE9C;;AACA,MAAIE,IAAI,GAAI,iBAAgBG,QAAS,MAArC;AACA,SAAOH,IAAP;AACD,CALD;;AAOAT,OAAO,CAACK,MAAR,CAAe,eAAf,IAAkC,UAASH,KAAT,EAAgB;AAChD,MAAIW,YAAY,GAAGX,KAAK,CAACK,aAAN,CAAoB,OAApB,CAAnB,CADgD,CAEhD;;AACA,MAAIE,IAAI,GAAI,gBAAeI,YAAa,MAAxC;AACA,SAAOJ,IAAP;AACD,CALD;;AAOAT,OAAO,CAACK,MAAR,CAAe,eAAf,IAAkC,UAASH,KAAT,EAAgB;AAChD,MAAIY,iBAAiB,GAAGZ,KAAK,CAACK,aAAN,CAAoB,YAApB,CAAxB,CADgD,CAEhD;;AACA,MAAIE,IAAI,GAAI,gBAAeK,iBAAkB,MAA7C;AACA,SAAOL,IAAP;AACD,CALD;;AAOAT,OAAO,CAACK,MAAR,CAAe,oBAAf,IAAuC,UAASH,KAAT,EAAgB;AACrD,MAAIa,kBAAkB,GAAGb,KAAK,CAACK,aAAN,CAAoB,WAApB,CAAzB;AACA,MAAIS,eAAe,GAAGd,KAAK,CAACK,aAAN,CAAoB,UAApB,CAAtB,CAFqD,CAGrD;;AACA,MAAIE,IAAI,GAAI,cAAaM,kBAAmB,IAAGC,eAAgB,MAA/D;AACA,SAAOP,IAAP;AACD,CAND;;AASAT,OAAO,CAACK,MAAR,CAAe,aAAf,IAAgC,UAASH,KAAT,EAAgB;AAC9C,MAAIe,cAAc,GAAGf,KAAK,CAACK,aAAN,CAAoB,OAApB,CAArB;AACA,MAAIW,2BAA2B,GAAGlB,OAAO,CAACC,UAAR,CAAmBkB,eAAnB,CAAmCjB,KAAnC,EAA0C,kBAA1C,CAAlC,CAF8C,CAG9C;;AACA,MAAIO,IAAI,GAAG,QAAX;AACA,SAAOA,IAAP;AACD,CAND;;AAOAT,OAAO,CAACK,MAAR,CAAe,gBAAf,IAAmC,UAASH,KAAT,EAAgB;AACjD,MAAIkB,cAAc,GAAGlB,KAAK,CAACK,aAAN,CAAoB,UAApB,CAArB,CADiD,CAEjD;;AACA,MAAGa,cAAc,IAAG,CAAC,GAAlB,IAAyBA,cAAc,IAAI,GAA9C,EACE,IAAIX,IAAI,GAAI,gBAAeW,cAAe,MAA1C,CADF,KAGE,IAAIX,IAAI,GAAI,+BAAZ,CAN+C,CAO/C;;AACF,SAAOA,IAAP;AACD,CATD","sourcesContent":["/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Define generation methods for custom blocks.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n// More on generating code:\n// https://developers.google.com/blockly/guides/create-custom-blocks/generating-code\n\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\nimport 'blockly/python';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n  return \"console.log('custom block');\\n\";\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n  return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n};\n\n//temi customn block\nBlockly.Python['speech_say'] = function(block) {\n  var text_utterance = block.getFieldValue('utterance');\n  var dropdown_language_options = block.getFieldValue(\"language_options\");\n  // var code = `robot.speak(TtsRequest.create(\"${text_utterance}\", false));\\n`;\n  var code = `robot.speak(\"${text_utterance}\", ${dropdown_language_options}\")\\n`\n  return code;\n};\n\nBlockly.Python['locations_goto'] = function(block) {\n  var text_location = block.getFieldValue('location');\n  // var code = `robot.goTo(\"${text_location}\");\\n`; \n  var code = `robot.goto(${text_location});\\n`;\n  // @TODO Add wait\n  return code;\n};\n\n// Blockly.JavaScript['call_person'] = function(block) {\n//   var text_contact = block.getFieldValue('contact');\n//   // var code = `robot.call(${text_contact});\\n`;\n  \n//   return code\n// };\nBlockly.Python['call_person'] = function(block) {\n  var dropdown_contact = block.getFieldValue('contact');\n  //var code = `actionlist.append('{\"action\":\"CALL\", \"content\":\"${dropdown_contact}\"}')\\n`\n  var code = `robot.call(${dropdown_contact});\\n`;\n  return code;\n};\n\nBlockly.Python['locations_go_home'] = function(block) {\n  var code = `robot.returnhome();\\n`;\n  //var code = `actionlist.append('{\"action\":\"GOTO\", \"content\":\"Home Base\"}')\\n`\n  return code;\n};\n\n\n// UNDERDEVELOP----------------------------------------------------------\n\nBlockly.Python['openwebsite'] = function(block) {\n  var text_url = block.getFieldValue('url');\n  // TODO: Assemble Python into code variable.\n  var code = `robot.showweb(${text_url});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_turn'] = function(block) {\n  var number_angle = block.getFieldValue('angle');\n  // TODO: Assemble Python into code variable.\n  var code = `robot.turnBy(${number_angle});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_tilt'] = function(block) {\n  var number_Tilt_angle = block.getFieldValue('Tilt_angle');\n  // TODO: Assemble Python into code variable.\n  var code = `robot.tiltBy(${number_Tilt_angle});\\n`;\n  return code;\n};\n\nBlockly.Python['movement_direction'] = function(block) {\n  var dropdown_direction = block.getFieldValue('direction');\n  var number_distance = block.getFieldValue('distance');\n  // TODO: Assemble Python into code variable.\n  var code = `robot.move(${dropdown_direction},${number_distance});\\n`;\n  return code;\n};\n\n\nBlockly.Python['event_block'] = function(block) {\n  var dropdown_event = block.getFieldValue('event');\n  var statements_event_out_of_bed = Blockly.JavaScript.statementToCode(block, 'event_out_of_bed');\n  // TODO: Assemble JavaScript into code variable.\n  var code = '...;\\n';\n  return code;\n};\nBlockly.Python['movement_turn2'] = function(block) {\n  var angle_movement = block.getFieldValue('movement');\n  // TODO: Assemble Python into code variable.\n  if(angle_movement >=-180 && angle_movement <= 180)\n    var code = `robot.turnBy(${angle_movement});\\n`;\n  else \n    var code = `robot.turnBy(out of Range);\\n`;\n    //var code = `robot.turnBy(${angle_movement});\\n`;\n  return code;\n};"]},"metadata":{},"sourceType":"module"}