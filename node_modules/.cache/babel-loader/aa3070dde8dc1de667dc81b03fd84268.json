{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oneto\\\\OneDrive\\\\Desktop\\\\blockly\\\\src\\\\Blockly\\\\BlocklyComponent.jsx\";\nimport React from \"react\";\nimport Blockly from \"blockly/core\";\nimport locale from \"blockly/msg/en\";\nimport \"blockly/blocks\";\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blocklyDiv = React.createRef();\n    this.toolbox = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      initialXml,\n      children,\n      ...rest\n    } = this.props;\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\n      toolbox: this.toolbox.current,\n      ...rest\n    });\n\n    if (initialXml) {\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n    }\n  }\n\n  get workspace() {\n    return this.primaryWorkspace;\n  }\n\n  setXml(xml) {\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.blocklyDiv,\n      style: {\n        width: \"100%\",\n        height: \"70vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"xml\", {\n      xmlns: \"https://developers.google.com/blockly/xml\",\n      is: \"blockly\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.toolbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nexport default BlocklyComponent;","map":{"version":3,"sources":["C:/Users/oneto/OneDrive/Desktop/blockly/src/Blockly/BlocklyComponent.jsx"],"names":["React","Blockly","locale","setLocale","BlocklyComponent","Component","constructor","props","blocklyDiv","createRef","toolbox","componentDidMount","initialXml","children","rest","primaryWorkspace","inject","current","Xml","domToWorkspace","textToDom","workspace","setXml","xml","render","width","height","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,gBAAP;AAEAD,OAAO,CAACE,SAAR,CAAkBD,MAAlB;;AAEA,MAAME,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkBR,KAAK,CAACS,SAAN,EAAlB;AACA,SAAKC,OAAL,GAAeV,KAAK,CAACS,SAAN,EAAf;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,QAAd;AAAwB,SAAGC;AAA3B,QAAoC,KAAKP,KAA/C;AACA,SAAKQ,gBAAL,GAAwBd,OAAO,CAACe,MAAR,CAAe,KAAKR,UAAL,CAAgBS,OAA/B,EAAwC;AAC9DP,MAAAA,OAAO,EAAE,KAAKA,OAAL,CAAaO,OADwC;AAE9D,SAAGH;AAF2D,KAAxC,CAAxB;;AAKA,QAAIF,UAAJ,EAAgB;AACdX,MAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ,CACElB,OAAO,CAACiB,GAAR,CAAYE,SAAZ,CAAsBR,UAAtB,CADF,EAEE,KAAKG,gBAFP;AAID;AACF;;AAED,MAAIM,SAAJ,GAAgB;AACd,WAAO,KAAKN,gBAAZ;AACD;;AAEDO,EAAAA,MAAM,CAACC,GAAD,EAAM;AACVtB,IAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ,CACElB,OAAO,CAACiB,GAAR,CAAYE,SAAZ,CAAsBG,GAAtB,CADF,EAEE,KAAKR,gBAFP;AAID;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAe,KAAKN,KAA1B;AAEA,wBACE,uDACE;AACE,MAAA,GAAG,EAAE,KAAKC,UADZ;AAEE,MAAA,KAAK,EAAE;AACLiB,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,KAAK,EAAC,2CADR;AAEE,MAAA,EAAE,EAAC,SAFL;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAHT;AAIE,MAAA,GAAG,EAAE,KAAKjB,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGG,QANH,CARF,CADF;AAmBD;;AAvD4C;;AA0D/C,eAAeT,gBAAf","sourcesContent":["import React from \"react\";\nimport Blockly from \"blockly/core\";\nimport locale from \"blockly/msg/en\";\nimport \"blockly/blocks\";\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blocklyDiv = React.createRef();\n    this.toolbox = React.createRef();\n  }\n\n  componentDidMount() {\n    const { initialXml, children, ...rest } = this.props;\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\n      toolbox: this.toolbox.current,\n      ...rest,\n    });\n\n    if (initialXml) {\n      Blockly.Xml.domToWorkspace(\n        Blockly.Xml.textToDom(initialXml),\n        this.primaryWorkspace\n      );\n    }\n  }\n\n  get workspace() {\n    return this.primaryWorkspace;\n  }\n\n  setXml(xml) {\n    Blockly.Xml.domToWorkspace(\n      Blockly.Xml.textToDom(xml),\n      this.primaryWorkspace\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <>\n        <div\n          ref={this.blocklyDiv}\n          style={{\n            width: \"100%\",\n            height: \"70vh\",\n          }}\n        />\n        <xml\n          xmlns=\"https://developers.google.com/blockly/xml\"\n          is=\"blockly\"\n          style={{ display: \"none\" }}\n          ref={this.toolbox}\n        >\n          {children}\n        </xml>\n      </>\n    );\n  }\n}\n\nexport default BlocklyComponent;\n"]},"metadata":{},"sourceType":"module"}